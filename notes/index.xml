<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Notes on</title><link>https://mohdziyadc.github.io/quartz/notes/</link><description>Recent content in Notes on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://mohdziyadc.github.io/quartz/notes/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://mohdziyadc.github.io/quartz/notes/Concatenation-and-Reversal-of-Strings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mohdziyadc.github.io/quartz/notes/Concatenation-and-Reversal-of-Strings/</guid><description>Proof: $$ \begin{align} &amp;amp;Proof \ by \ induction\ on \ |x| \ &amp;amp;Base\ Case:\ |x| = 0.\ Then\ x = \epsilon, and\ (wx)^R = (w\epsilon)^R = w^R = (\epsilon w)^R = (xw)^R.</description></item><item><title/><link>https://mohdziyadc.github.io/quartz/notes/Concatenation-and-Reverse-of-Languages/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mohdziyadc.github.io/quartz/notes/Concatenation-and-Reverse-of-Languages/</guid><description>Proof: $$ \begin{align} If\ x\ and\ y\ are\ strings,\ &amp;amp; then\ \forall x (\forall y ((xy)^R = y^R x^R ))\ (L_1 L_2)^R &amp;amp;= {(xy)^R : x \in L_1\ and\ y \in L_2}\ &amp;amp;= {y^R x^R : x \in L_1 and\ y \in L_2}\ &amp;amp;= L_2^R L_1^R \end{align} $$</description></item><item><title/><link>https://mohdziyadc.github.io/quartz/notes/Deterministic-Finite-Automata/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mohdziyadc.github.io/quartz/notes/Deterministic-Finite-Automata/</guid><description>Deterministic Finite Automata A deterministic FSM (or DFSM) M is a quintuple $(K, \sum, \delta, s, A)$, where:
$K$ is a finite set of states $\sum$ is the input Alphabet $s \in K$ is the start state $A \subseteq K$ is the set of accepting state $\delta$ is the transition function The language accepted by [[Deterministic Finite Automata|DFSM]] M, denoted $L(M)$, is the set of string accepted by M.</description></item><item><title/><link>https://mohdziyadc.github.io/quartz/notes/DFSM-Halts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mohdziyadc.github.io/quartz/notes/DFSM-Halts/</guid><description>$$ \begin{align} proof&amp;amp;:\ &amp;amp;On\ input\ w, M\ executes\ some\ computation\ C_0 |{-M}\ C_1 |{-M}\ C_2 |{-M} â€¦ |{-M} C_n,\ &amp;amp;where\ C_0\ is\ an\ initial\ configuration\ and\ Cn\ is\ of\ the\ form\ (q, \epsilon),\ &amp;amp;for\ some\ state\ q \in K_M.</description></item><item><title/><link>https://mohdziyadc.github.io/quartz/notes/Finite-Automata/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mohdziyadc.github.io/quartz/notes/Finite-Automata/</guid><description>Finite Automata A [[Finite Automata|Finite State Machine]] ([[Finite Automata|Finite State Automata]], [[Finite Automata|Finite Automata]]) is a computational device whose input is a string and whose output is one of two values(Accept or Reject).</description></item><item><title/><link>https://mohdziyadc.github.io/quartz/notes/Language-Hierarchy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mohdziyadc.github.io/quartz/notes/Language-Hierarchy/</guid><description>Language Hierarchy A Machine-Based Hierarchy of Language Classes The Regular Languages We will call the class of languages that can be accepted by some [[Finite Automata|FSM]] regular.</description></item><item><title/><link>https://mohdziyadc.github.io/quartz/notes/Languages/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mohdziyadc.github.io/quartz/notes/Languages/</guid><description>Languages A language is a(finite or infinite) set of strings over a finite alphabet $\sum$.
[!Note]
The Empty Language $Let\ L = {} = \phi$.</description></item><item><title/><link>https://mohdziyadc.github.io/quartz/notes/Non-deterministic-Automata/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mohdziyadc.github.io/quartz/notes/Non-deterministic-Automata/</guid><description>Non-Deterministic Automata A Non-Deterministic [[Non-deterministic Automata|NDFSM]] M is quintuple $(K, \sum, \Delta, s, A)$, where:
K is a finite set of states, $\sum$ is an alphabet, $s \in K$ is the start state, $A \subseteq K$ is the set of final states, and $\Delta$ is the transition relation.</description></item><item><title/><link>https://mohdziyadc.github.io/quartz/notes/Theory-Of-Computation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mohdziyadc.github.io/quartz/notes/Theory-Of-Computation/</guid><description>Theory Of Computation Languages And Strings Alphabet An alphabet is denoted by $\sum$ , a finite set. The members of $\sum$ are called symbols and characters.</description></item></channel></rss>